version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: seata-postgres
    environment:
      POSTGRES_DB: seata_demo
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    networks:
      - seata-network

  # Seata Server
  seata-server:
    image: seataio/seata-server:1.7.1
    container_name: seata-server
    hostname: seata-server
    ports:
      - "8091:8091"
      - "7091:7091"
    environment:
      - SEATA_PORT=8091
      - SEATA_CONFIG_NAME=file:/root/seata-config/registry
      - SEATA_IP=seata-server
    volumes:
      - ./docker/seata-server.conf:/root/seata-config/registry.conf
    depends_on:
      - postgres
    networks:
      - seata-network

  # Order Service
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - SEATA_SERVER_HOST=seata-server
      - STOCK_SERVICE_HOST=stock-service
    depends_on:
      - postgres
      - seata-server
    networks:
      - seata-network

  # Stock Service
  stock-service:
    build:
      context: ./stock-service
      dockerfile: Dockerfile
    container_name: stock-service
    ports:
      - "8081:8081"
    environment:
      - DB_HOST=postgres
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - SEATA_SERVER_HOST=seata-server
    depends_on:
      - postgres
      - seata-server
    networks:
      - seata-network

volumes:
  postgres_data:

networks:
  seata-network:
    driver: bridge